/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

/*plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}
repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

}

*/
/*apply plugin: 'java'
group = 'test'
dependencies {
    testCompile 'junit:junit:4.8.2'
}
repositories {
        mavenCentral()
test {
	    testLogging {
	        // Show that tests are run in the command-line output
	        events 'started', 'passed'
	    }
	}
}*/

/*
 apply plugin£º'java'
 apply plugin£º' eclipse'
 apply plugin£º'maven'
 apply plugin£º'artifactory-publish'
 apply plugin: 'maven-publish'
 groupId ='myGroup'
 version ='1.0'
 def artifactId = projectDir.name 
 def versionNumber = version 
 
*/

apply plugin:'java'
apply plugin:'eclipse'
apply plugin:'maven'
apply plugin:'maven-publish'
apply plugin:'checkstyle'
apply plugin:'pmd'



	task player1(type: Jar) {
	    manifest {
	        attributes(
	                
	                'Main-Class': 'game.Game'
	        )
	    }
	    from {
	        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	    }
	    baseName = 'demo'
	    with jar
	 }
 task runExecutableJar(type: JavaExec) {
   classpath = files('build/libs/demo.jar')

}
 checkstyle {
    toolVersion '8.32'
    configFile file("config/checkstyle/checkstyle.xml")
}
checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}
 pmd{
 	toolVersion '6.23.0'
 	 ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleSet.xml')
 	 rulePriority = 5
 	 consoleOutput = true
 	 ignoreFailures = true
 
 
 }
 repositories {
    mavenCentral()
     // maven {url 'https://dl.bintray.com/jetbrains/anko'} 
      // maven {
      //  url "http://repo.mycompany.com/maven2"
   // }
}


dependencies {
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.41.0'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://localhost/tmp/myRepo/")
        }
    }
}
